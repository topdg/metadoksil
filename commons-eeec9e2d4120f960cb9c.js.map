{"version":3,"file":"commons-eeec9e2d4120f960cb9c.js","mappings":"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","sources":["webpack:///./node_modules/camelcase/index.js","webpack:///../src/image-utils.ts","webpack:///../src/components/hooks.ts","webpack:///../src/components/picture.tsx","webpack:///../src/components/layout-wrapper.tsx","webpack:///../src/components/placeholder.tsx","webpack:///../src/components/main-image.tsx","webpack:///../src/components/gatsby-image.browser.tsx","webpack:///../src/components/gatsby-image.server.tsx","webpack:///../src/components/static-image.server.tsx","webpack:///../src/components/static-image.tsx","webpack:///./src/utils/components/Hamburger/Hamburger.tsx","webpack:///./src/utils/components/Hamburger/Hamburger.module.scss","webpack:///./src/components/Footer/Footer.module.scss","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/hooks/useSiteOptionsQuery.ts","webpack:///./src/components/HeaderMenu/HeaderMenu.tsx","webpack:///./src/components/Header/Header.module.scss","webpack:///./src/components/Logo/Logo.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/hooks/useMenuQuery.ts","webpack:///./src/utils/components/Menu/Menu.module.scss","webpack:///./src/utils/components/Menu/Menu.tsx","webpack:///./src/utils/components/Content/Content.tsx","webpack:///./src/components/Danger/Danger.tsx","webpack:///./src/components/Danger/Danger.module.scss","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/utils/components/Button/Button.tsx","webpack:///./src/utils/components/Container/Container.tsx","webpack:///./src/utils/utils.ts"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  var hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React, { FC, MouseEventHandler } from \"react\";\nimport { MenuProps } from \"../Menu/Menu.types\";\nimport { cls } from \"../../utils\";\nimport { Button } from \"../Button/Button\";\n\nimport * as styles from './Hamburger.module.scss';\n\nexport const Hamburger : FC<MenuProps> = ({ active, toggleMenu }) => {\n\n  return (\n    <Button className={cls(styles.hamburger, active && styles.hamburgerActive)} handlerClick={toggleMenu} attributes={{\"aria-label\": active ? 'открыть меню':'закрыть меню'}}>\n      <span className={ styles.hamburger__line }></span>\n    </Button>\n  )\n}","// extracted by mini-css-extract-plugin\nexport var hamburger = \"Hamburger-module--hamburger--6294d\";\nexport var hamburgerActive = \"Hamburger-module--hamburger-active--fe5df\";\nexport var hamburger__line = \"Hamburger-module--hamburger__line--ce4ac\";","// extracted by mini-css-extract-plugin\nexport var footer__bottom = \"Footer-module--footer__bottom--79b04\";\nexport var footer__bottom_content = \"Footer-module--footer__bottom_content--4dbad\";\nexport var footer__bottom_link = \"Footer-module--footer__bottom_link--f55aa\";\nexport var footer__col = \"Footer-module--footer__col--2155d\";\nexport var footer__item = \"Footer-module--footer__item--59cc8\";\nexport var footer__items = \"Footer-module--footer__items--0aa8d\";\nexport var footer__link = \"Footer-module--footer__link--baf74\";\nexport var footer__main = \"Footer-module--footer__main--ed0de\";\nexport var footer__row = \"Footer-module--footer__row--4ffc6\";\nexport var footer__title = \"Footer-module--footer__title--97933\";","import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport { useSiteOptionsQuery } from \"../../hooks/useSiteOptionsQuery\"\nimport { Container } from \"../../utils/components/Container/Container\"\nimport { cls } from \"../../utils/utils\"\nimport * as styles from \"./Footer.module.scss\"\n\nexport const Footer : FC = () => {\n   const { wp } = useSiteOptionsQuery();\n\n  const { siteOptions } = wp?.mainOptions?.acf__mainSiteSettings ?? {};\n\n  return (\n    <footer id=\"footer\" className={ styles.footer }>\n      <div className={ styles.footer__main }>\n        <Container>\n          <div className={cls(styles.footer__row, styles.footer__mainRow)}>\n            <div className={ styles.footer__col }>\n              <div className={ styles.footer__title }>Метадоксил</div>\n              <div className={ styles.footer__nav }>\n                <ul className={ styles.footer__items }>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>О препарате</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Научные публикации</a></li>\n                  <li className={ styles.footer__item }><Link to=\"/tabletki/\" className={ styles.footer__link }>Инструкция, таблетки</Link></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Инструкция, раствор</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Где купить</a></li>\n                </ul>\n              </div>\n            </div>\n            <div className={ styles.footer__col }>\n              <div className={ styles.footer__title }>Показания</div>\n              <div className={ styles.footer__nav }>\n                <ul className={ styles.footer__items }>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>При абстинентном синдроме</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>При острой интоксикации организма алкоголем</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>При пагубном потреблении алкоголя</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>При амнестическом синдроме</a></li>\n                </ul>\n              </div>\n            </div>\n            <div className={ styles.footer__col }>\n              <div className={ styles.footer__title }>О похмелье</div>\n              <div className={ styles.footer__nav }>\n                <ul className={ styles.footer__items }>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Алкогольный калькулятор</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Как избавиться от похмелья</a></li>\n                  <li className={ styles.footer__item }><a href=\"\" className={ styles.footer__link }>Что такое алкогольная интоксикация</a></li>\n                </ul>\n              </div>\n            </div>\n            <div className={ styles.footer__col }>\n              <div className={ styles.footer__title }>Контакты</div>\n              <div className={ styles.footer__nav }>\n                <ul className={ styles.footer__items }>\n                  <li className={ styles.footer__item }>{ siteOptions.copyright }</li>\n                  <li className={ styles.footer__item }>{ siteOptions.company }</li>\n                  <li className={ styles.footer__item }><a href={'tel:+' + siteOptions.phone.split(' ').join('').split('-').join('') } className={ styles.footer__link }>{ siteOptions.phone }</a></li>\n                  <li className={ styles.footer__item }><a href=\"mailto:office@cscpharma.ru\" className={ styles.footer__link }>office@cscpharma.ru</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n      <div className={ styles.footer__bottom }>\n        <Container>\n          <div className={ styles.footer__bottom_content }>\n            <a href=\"/\" className={ styles.footer__bottom_link }>Сайт разработан в Digital Generation</a>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  )\n}","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteOptionsQuery = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    wp {\n      mainOptions {\n        acf__mainSiteSettings {\n          siteOptions {\n            address\n            company\n            copyright\n            email\n            emailContact\n            fieldGroupName\n            phone\n          }\n        }\n      }\n    }\n  }\n`)\n  return data;\n}","import { Link } from \"gatsby\"\nimport React, { FC } from \"react\"\n\nimport * as styles from '../Header/Header.module.scss';\n\ninterface HeaderMenuItem {\n  label: string\n  uri: string\n}\n\nexport interface HeaderMenuItems {\n  items: HeaderMenuItem[]\n}\n\nexport const HeaderMenu : FC<HeaderMenuItems> = ( {items} ) => {\n\n  return (\n    <nav className={ styles.header__menu }>\n      <ul className={ styles.header__menu_list }>\n        {\n          items.map((el, i) => <li key={i} className={ styles.header__menu_item }><Link to={el.uri} className={ styles.header__menu_link }>{el.label}</Link></li>)\n        }\n      </ul>\n    </nav>\n  )\n}","// extracted by mini-css-extract-plugin\nexport var header = \"Header-module--header--357cc\";\nexport var headerFixed = \"Header-module--header-fixed--b3791\";\nexport var headerWhite = \"Header-module--header-white--dd0f9\";\nexport var header__content = \"Header-module--header__content--9a010\";\nexport var header__menu = \"Header-module--header__menu--a1981\";\nexport var header__menu_item = \"Header-module--header__menu_item--ab367\";\nexport var header__menu_link = \"Header-module--header__menu_link--fcbc2\";\nexport var header__menu_list = \"Header-module--header__menu_list--c1f8c\";\nexport var header__row = \"Header-module--header__row--46e9c\";\nexport var showHeader = \"Header-module--showHeader--c4981\";","import { Link } from 'gatsby'\nimport React, { FC } from 'react'\nimport { LogoProps } from './Logo.types'\n\nexport const Logo : FC<LogoProps> = ({ color = '#8A8D8E' }) => {\n\n  return (\n    <Link to=\"/\">\n      <svg width=\"201\" height=\"31\" viewBox=\"0 0 201 31\" fill={color} xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2.42627 0.117188H6.49365L13.2954 18.8477L20.0801 0.117188H24.1646L14.9189 25H11.6548L2.42627 0.117188ZM0.375488 0.117188H4.35742L5.0752 17.3267V25H0.375488V0.117188ZM22.2163 0.117188H26.2153V25H21.5156V17.3267L22.2163 0.117188ZM38.9644 25.3418C37.563 25.3418 36.304 25.1139 35.1875 24.6582C34.071 24.2025 33.1196 23.5701 32.3335 22.7612C31.5588 21.9409 30.9606 20.9896 30.5391 19.9072C30.1289 18.8135 29.9238 17.64 29.9238 16.3867V15.7031C29.9238 14.279 30.1289 12.9858 30.5391 11.8237C30.9492 10.6502 31.5303 9.64193 32.2822 8.79883C33.0342 7.95573 33.9342 7.30632 34.9824 6.85059C36.0306 6.39486 37.187 6.16699 38.4517 6.16699C39.7619 6.16699 40.9183 6.38916 41.9209 6.8335C42.9235 7.26644 43.7609 7.88167 44.4331 8.6792C45.1053 9.47673 45.6123 10.4338 45.9541 11.5503C46.2959 12.6554 46.4668 13.8802 46.4668 15.2246V17.1216H31.9746V14.0112H42.0234V13.6694C42.0007 12.9517 41.8639 12.2965 41.6133 11.7041C41.3626 11.1003 40.9753 10.6217 40.4512 10.2686C39.9271 9.90397 39.2492 9.72168 38.4175 9.72168C37.7453 9.72168 37.1585 9.86979 36.6572 10.166C36.1673 10.4508 35.7572 10.861 35.4268 11.3965C35.1077 11.9206 34.8685 12.5472 34.709 13.2764C34.5495 14.0055 34.4697 14.8145 34.4697 15.7031V16.3867C34.4697 17.1615 34.5723 17.8792 34.7773 18.54C34.9938 19.2008 35.3071 19.7762 35.7173 20.2661C36.1388 20.7446 36.6401 21.1206 37.2212 21.394C37.8136 21.6561 38.4858 21.7871 39.2378 21.7871C40.1834 21.7871 41.0379 21.6048 41.8013 21.2402C42.576 20.8643 43.2482 20.3117 43.8179 19.5825L46.0908 21.9409C45.7035 22.5106 45.1794 23.0575 44.5186 23.5815C43.8691 24.1056 43.083 24.5329 42.1602 24.8633C41.2373 25.1823 40.172 25.3418 38.9644 25.3418ZM58.2588 6.50879V25H53.73V6.50879H58.2588ZM64.2744 6.50879V10.0293H47.8169V6.50879H64.2744ZM76.8354 21.0693V12.5415C76.8354 11.9149 76.7272 11.3737 76.5107 10.918C76.2943 10.4622 75.9639 10.109 75.5195 9.8584C75.0752 9.60775 74.5112 9.48242 73.8276 9.48242C73.2238 9.48242 72.694 9.58496 72.2383 9.79004C71.7939 9.99512 71.4521 10.2856 71.2129 10.6616C70.9736 11.0262 70.854 11.4478 70.854 11.9263H66.3252C66.3252 11.1629 66.5075 10.4395 66.8721 9.75586C67.2367 9.06087 67.755 8.44564 68.4272 7.91016C69.1108 7.36328 69.9255 6.93604 70.8711 6.62842C71.8281 6.3208 72.8991 6.16699 74.084 6.16699C75.4854 6.16699 76.7329 6.40625 77.8267 6.88477C78.9318 7.35189 79.7977 8.05827 80.4243 9.00391C81.0623 9.94954 81.3813 11.1401 81.3813 12.5757V20.6421C81.3813 21.5649 81.4383 22.3568 81.5522 23.0176C81.6776 23.667 81.8599 24.231 82.0991 24.7095V25H77.502C77.2855 24.5329 77.1203 23.9404 77.0063 23.2227C76.8924 22.4935 76.8354 21.7757 76.8354 21.0693ZM77.4678 13.7378L77.502 16.4209H74.6479C73.9416 16.4209 73.3206 16.495 72.7852 16.6431C72.2497 16.7798 71.811 16.9849 71.4692 17.2583C71.1274 17.5203 70.8711 17.8394 70.7002 18.2153C70.5293 18.5799 70.4438 18.9958 70.4438 19.4629C70.4438 19.9186 70.5464 20.3288 70.7515 20.6934C70.9679 21.0579 71.2756 21.3485 71.6743 21.5649C72.0845 21.77 72.563 21.8726 73.1099 21.8726C73.9074 21.8726 74.6024 21.7131 75.1948 21.394C75.7873 21.0636 76.2487 20.6649 76.5791 20.1978C76.9095 19.7306 77.0861 19.2863 77.1089 18.8647L78.4077 20.813C78.2482 21.2801 78.009 21.7757 77.6899 22.2998C77.3709 22.8239 76.9608 23.3138 76.4595 23.7695C75.9582 24.2253 75.3543 24.6012 74.6479 24.8975C73.9416 25.1937 73.1213 25.3418 72.187 25.3418C70.9907 25.3418 69.9198 25.1025 68.9741 24.624C68.0285 24.1455 67.2822 23.4904 66.7354 22.6587C66.1885 21.827 65.915 20.8813 65.915 19.8218C65.915 18.842 66.0973 17.9761 66.4619 17.2241C66.8265 16.4722 67.3677 15.8398 68.0854 15.3271C68.8032 14.8031 69.6919 14.41 70.7515 14.1479C71.8224 13.8745 73.0472 13.7378 74.4258 13.7378H77.4678ZM88.7812 6.50879H93.293L93.1221 12.8662C93.0651 14.7917 92.8372 16.4551 92.4385 17.8564C92.0511 19.2464 91.5327 20.4142 90.8833 21.3599C90.2453 22.3055 89.5161 23.0688 88.6958 23.6499C87.8869 24.231 87.0381 24.681 86.1494 25H85.0728L85.0557 21.4795L85.5854 21.4453C86.1209 20.8757 86.571 20.3174 86.9355 19.7705C87.3115 19.2122 87.6134 18.6141 87.8413 17.9761C88.0692 17.3381 88.2401 16.6089 88.354 15.7886C88.4793 14.9569 88.5591 13.9827 88.5933 12.8662L88.7812 6.50879ZM89.9946 6.50879H101.975V25H97.4629V10.2173H89.9946V6.50879ZM84.0474 21.4453H104.555V30.5371H100.043V25H88.6445V30.5371H84.0303L84.0474 21.4453ZM106.521 15.9424V15.5835C106.521 14.2277 106.714 12.9801 107.102 11.8408C107.489 10.6901 108.053 9.6932 108.793 8.8501C109.534 8.007 110.44 7.35189 111.511 6.88477C112.582 6.40625 113.801 6.16699 115.168 6.16699C116.558 6.16699 117.788 6.40625 118.859 6.88477C119.942 7.35189 120.853 8.007 121.594 8.8501C122.334 9.6932 122.898 10.6901 123.286 11.8408C123.673 12.9801 123.867 14.2277 123.867 15.5835V15.9424C123.867 17.2868 123.673 18.5343 123.286 19.6851C122.898 20.8244 122.334 21.8213 121.594 22.6758C120.853 23.5189 119.947 24.174 118.876 24.6411C117.806 25.1082 116.581 25.3418 115.202 25.3418C113.835 25.3418 112.61 25.1082 111.528 24.6411C110.445 24.174 109.534 23.5189 108.793 22.6758C108.053 21.8213 107.489 20.8244 107.102 19.6851C106.714 18.5343 106.521 17.2868 106.521 15.9424ZM111.032 15.5835V15.9424C111.032 16.7513 111.112 17.509 111.271 18.2153C111.431 18.9217 111.676 19.5426 112.006 20.0781C112.337 20.6136 112.764 21.0352 113.288 21.3428C113.824 21.639 114.462 21.7871 115.202 21.7871C115.931 21.7871 116.558 21.639 117.082 21.3428C117.606 21.0352 118.033 20.6136 118.364 20.0781C118.706 19.5426 118.956 18.9217 119.116 18.2153C119.275 17.509 119.355 16.7513 119.355 15.9424V15.5835C119.355 14.786 119.275 14.0397 119.116 13.3447C118.956 12.6383 118.706 12.0174 118.364 11.4819C118.033 10.9351 117.6 10.5078 117.065 10.2002C116.541 9.88118 115.909 9.72168 115.168 9.72168C114.439 9.72168 113.812 9.88118 113.288 10.2002C112.764 10.5078 112.337 10.9351 112.006 11.4819C111.676 12.0174 111.431 12.6383 111.271 13.3447C111.112 14.0397 111.032 14.786 111.032 15.5835ZM131.967 6.50879V25H127.456V6.50879H131.967ZM144.016 6.50879L135.864 17.8564H131.062L130.498 13.7207H133.83L138.325 6.50879H144.016ZM138.598 25L133.54 17.0703L137.299 14.7119L144.597 25H138.598ZM153.979 21.7871C154.617 21.7871 155.187 21.6618 155.688 21.4111C156.189 21.1605 156.588 20.8073 156.884 20.3516C157.192 19.8958 157.357 19.366 157.38 18.7622H161.635C161.612 20.0155 161.259 21.1377 160.576 22.1289C159.892 23.1201 158.981 23.9062 157.841 24.4873C156.713 25.057 155.449 25.3418 154.047 25.3418C152.623 25.3418 151.381 25.1025 150.322 24.624C149.262 24.1455 148.379 23.479 147.673 22.6245C146.978 21.77 146.454 20.7788 146.101 19.6509C145.759 18.5229 145.588 17.3153 145.588 16.0278V15.481C145.588 14.1935 145.759 12.9858 146.101 11.8579C146.454 10.73 146.978 9.73877 147.673 8.88428C148.379 8.02979 149.262 7.36328 150.322 6.88477C151.381 6.40625 152.618 6.16699 154.03 6.16699C155.523 6.16699 156.833 6.45752 157.961 7.03857C159.1 7.61963 159.989 8.43994 160.627 9.49951C161.276 10.5591 161.612 11.8066 161.635 13.2422H157.38C157.357 12.5814 157.209 11.9889 156.936 11.4648C156.662 10.9408 156.275 10.5192 155.773 10.2002C155.272 9.88118 154.663 9.72168 153.945 9.72168C153.181 9.72168 152.543 9.88118 152.031 10.2002C151.529 10.5192 151.136 10.9578 150.852 11.5161C150.578 12.063 150.384 12.6782 150.271 13.3618C150.168 14.034 150.117 14.7404 150.117 15.481V16.0278C150.117 16.7798 150.168 17.4976 150.271 18.1812C150.384 18.8647 150.578 19.48 150.852 20.0269C151.136 20.5623 151.529 20.9896 152.031 21.3086C152.543 21.6276 153.193 21.7871 153.979 21.7871ZM169.206 18.5571L175.939 6.50879H180.468V25H175.939V12.9346L169.206 25H164.677V6.50879H169.206V18.5571ZM196.994 6.50879V10.0806H187.937V6.50879H196.994ZM200.395 6.50879V25H195.883V6.50879H200.395ZM186.809 6.50879H191.269L190.773 15.7373C190.694 17.0931 190.551 18.2837 190.346 19.3091C190.141 20.3231 189.868 21.1947 189.526 21.9238C189.184 22.6416 188.768 23.2284 188.278 23.6841C187.788 24.1398 187.219 24.4759 186.569 24.6924C185.931 24.8975 185.214 25 184.416 25H183.032L182.98 21.3599L183.63 21.3086C184.029 21.2744 184.37 21.1662 184.655 20.9839C184.951 20.8016 185.202 20.5396 185.407 20.1978C185.624 19.856 185.8 19.4173 185.937 18.8818C186.085 18.335 186.199 17.6969 186.279 16.9678C186.37 16.2272 186.433 15.3727 186.467 14.4043L186.809 6.50879Z\"/>\n      </svg>\n    </Link>\n  )\n}\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Container } from \"../../utils/components/Container/Container\";\nimport { Hamburger } from \"../../utils/components/Hamburger/Hamburger\";\nimport { HeaderMenu } from \"../HeaderMenu/HeaderMenu\";\nimport { useMenuQuery } from \"../../hooks/useMenuQuery\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Logo } from \"../Logo/Logo\";\nimport { cls } from \"../../utils/utils\";\nimport { HeaderProps } from \"./Header.types\";\n\nimport * as styles from './Header.module.scss';\n\nexport const Header : FC<HeaderProps> = ( { type = 'default'} ) => {\n  const [isFixed, setIsFixed] = useState(false);\n  const [isWhite, setIsWhite] = useState(type == 'white');\n  const { wpMenu } = useMenuQuery();\n\n  const toggleFixedHeader = (e : Event) => {\n    const window = e.currentTarget as Window;\n    if (window.scrollY > 150) {\n      if (!isFixed) {\n        setIsFixed(true);\n        if (type == 'white') {\n          setIsWhite(false)\n        }\n      }\n    }\n    else if (isFixed) {\n      setIsFixed(false);\n      if (type == 'white') {\n        setIsWhite(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleFixedHeader);\n    return () => window.removeEventListener(\"scroll\", toggleFixedHeader);\n  }, [isFixed]);\n\n  return (\n    <header className={cls(styles.header, isFixed && styles.headerFixed, isWhite && styles.headerWhite)}>\n      <Container>\n        <div className={styles.header__content}>\n          <Logo color={isWhite?\"#FFF\":\"#8A8D8E\"} />\n          <HeaderMenu items={wpMenu.menuItems.nodes} />\n        </div>\n      </Container>\n    </header>\n  )\n}","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useMenuQuery = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      wpMenu(databaseId: {eq: 31}) {\n        menuItems {\n          nodes {\n            label\n            uri\n          }\n        }\n      }\n    }\n  `)\n  return data;\n}","// extracted by mini-css-extract-plugin\nexport var menu = \"Menu-module--menu--87398\";\nexport var menuActive = \"Menu-module--menu-active--a9d5f\";\nexport var menu__content = \"Menu-module--menu__content--cd169\";\nexport var menu__group = \"Menu-module--menu__group--14a17\";\nexport var menu__group_item = \"Menu-module--menu__group_item--1558f\";\nexport var menu__group_link = \"Menu-module--menu__group_link--a6943\";\nexport var menu__group_list = \"Menu-module--menu__group_list--2dd5a\";\nexport var menu__group_title = \"Menu-module--menu__group_title--5adcb\";","import React, { FC } from 'react'\nimport { MenuProps } from './Menu.types'\nimport { cls } from '../../utils'\nimport { Link } from 'gatsby';\n\nimport * as styles from './Menu.module.scss';\n\nexport const Menu : FC<MenuProps> = ( {active, toggleMenu} ) => {\n  return (\n    <nav className={cls(styles.menu, active && styles.menuActive)}>\n      <div className={ styles.menu__content }>\n        <div className={ styles.menu__group }>\n          <div className={ styles.menu__group_title }>Метадоксил</div>\n          <ul className={ styles.menu__group_list }>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>О препарате</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Научные публикации</a></li>\n            <li className={ styles.menu__group_item }><Link to=\"/tabletki/\" className={ styles.menu__group_link }>Инструкция, таблетки</Link></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Инструкция, раствор</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Где купить</a></li>\n          </ul>\n        </div>\n        <div className={ styles.menu__group }>\n          <div className={ styles.menu__group_title }>Показания</div>\n          <ul className={ styles.menu__group_list }>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>При абстинентном синдроме</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>При острой интоксикации организма алкоголем</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>При пагубном потреблении алкоголя</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>При амнестическом синдроме</a></li>\n          </ul>\n        </div>\n        <div className={ styles.menu__group }>\n          <div className={ styles.menu__group_title }>О похмелье</div>\n          <ul className={ styles.menu__group_list }>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Алкогольный калькулятор</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Как избавиться от похмелья</a></li>\n            <li className={ styles.menu__group_item }><a href=\"#\" className={ styles.menu__group_link }>Что такое алкогольная интоксикация</a></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import React, { FC } from 'react'\nimport { ElementProps } from '../../types/types'\nimport { cls } from '../../utils'\n\nimport * as styles from './Content.module.scss'\n\nexport const Content : FC<ElementProps<HTMLDivElement>> = ({className, attributes, children}) => {\n  return (\n    <main id=\"page-content\" className={cls('page-content', className)} {...attributes}>\n      {children}\n    </main>\n  )\n}\n","import { StaticImage } from 'gatsby-plugin-image'\nimport React, { FC } from 'react'\nimport { Container } from '../../utils/components/Container/Container'\nimport * as styles from './Danger.module.scss'\n\nexport const Danger : FC = () => {\n  return (\n    <div className={ styles.danger }>\n      <Container>\n        <StaticImage src=\"../../assets/images/danger.svg\" className={ styles.danger__img } alt=\"имеются противопоказания. требуется консультация специалиста\"/>\n      </Container>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var danger = \"Danger-module--danger--1ecc9\";\nexport var danger__img = \"Danger-module--danger__img--6edc5\";","import React, { FC, useState } from \"react\";\nimport { Hamburger } from \"../../utils/components/Hamburger/Hamburger\";\nimport { ElementProps } from \"../../utils/types/types\";\nimport { Footer } from \"../Footer/Footer\";\nimport { Header } from \"../Header/Header\";\nimport { Menu } from \"../../utils/components/Menu/Menu\";\nimport { Content } from \"../../utils/components/Content/Content\";\nimport { Danger } from \"../Danger/Danger\";\nimport { LayoutProps } from \"./Layout.types\";\n\nimport '../../assets/sass/style.scss';\n\nexport const Layout: FC<LayoutProps> = ( { header, pageClassName, children } ) => {\n\n  const [activeMenu, setActiveMenu] = useState(false);\n\n  const toggleMenu = () => setActiveMenu(prev => !prev); \n\n  return (\n    <div className=\"wrapper\">\n      <Header type={header ? 'white' : 'default'} />\n      <Hamburger active={ activeMenu } toggleMenu={ toggleMenu }  />\n      <Menu active={ activeMenu } toggleMenu={ toggleMenu } />\n      <Content className={pageClassName}>\n        { children }\n        <Danger />\n      </Content>\n      <Footer />\n    </div>\n  )\n}","import React, { FC, MouseEventHandler } from \"react\"\nimport { cls } from \"../../utils\"\nimport { ButtonProps } from \"./Button.types\"\n\n\n\nexport const Button : FC<ButtonProps> = ( {className, handlerClick, attributes, children} ) => {\n  \n  return (\n    <button \n      className={ cls('button', className) } \n      onClick={handlerClick} \n      {...attributes}\n    >\n      {children}\n    </button>\n  )\n}","import React, { FC} from \"react\"\nimport { ElementProps } from \"../../types/types\"\nimport { cls } from \"../../utils\"\n\nexport const Container : FC<ElementProps<HTMLDivElement>> = ( {className = '', attributes, children} ) => {\n  \n  return (\n    <div className={ cls(\"container\", className) }>\n      {children}\n    </div>\n  )\n}","export const cls = (...classNames: (string | boolean | undefined | null)[]) =>\n  classNames.filter(Boolean).join(\" \");"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","message","console","warn","a","b","images","image","src","width","filename","lastIndexOf","dot","ext","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","format","Math","round","setDefaultDimensions","generateImageSource","fit","_generateImageSource","pluginName","reporter","backgroundColor","placeholderURL","Error","formatFromFilename","Set","size","has","delete","add","imgDimensions","DEFAULT_BREAKPOINTS","entries","erroneousUserDimensions","dim","outputPixelDensities","DEFAULT_PIXEL_DENSITIES","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","fixedDimension","sizes","densities","density","presentationWidth","originalWidth","presentationHeight","unscaledWidth","calculateImageSizes","sources","imageSizes","forEach","imageSrc","Boolean","find","img","unscaled","result","fallback","srcSet","getSrcSet","push","type","imageProps","placeholder","values","from","sort","sortNumeric","l","min","includes","dimensions","Number","MAX_SAFE_INTEGER","widthOption","heightOption","imageAspectRatio","max","prototype","node","_node$images","_node$images$fallback","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","getImage","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","EVERY_BREAKPOINT","isLoading","isLoaded","loading","style","shouldLoad","opacity","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","defaultImage","artDirected","media","output","source","fallbackImage","paddingTop","maxWidth","display","React","alt","role","children","Fragment","Sizer","t","decoding","undefined","Image","key","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","altValidator","e","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","cacheKey","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","GatsbyImageBrowser","__error","imageData","__imageData","StaticImage","Hamburger","active","toggleMenu","Button","cls","handlerClick","attributes","footer__bottom","footer__bottom_content","footer__bottom_link","footer__col","footer__item","footer__items","footer__link","footer__main","footer__row","footer__title","Footer","wp","useStaticQuery","siteOptions","mainOptions","_wp$mainOptions","acf__mainSiteSettings","id","styles","Container","href","Link","to","copyright","company","phone","split","HeaderMenu","items","el","uri","label","Logo","color","viewBox","fill","xmlns","d","Header","useState","isFixed","setIsFixed","isWhite","setIsWhite","wpMenu","toggleFixedHeader","currentTarget","scrollY","window","menuItems","nodes","menu__group","menu__group_item","menu__group_link","menu__group_list","menu__group_title","Menu","Content","Danger","Layout","header","pageClassName","activeMenu","setActiveMenu","prev","onClick","classNames"],"sourceRoot":""}